{"version":3,"sources":["store/context.js","store/store.js","store/reducer.js","components/header/auth/index.jsx","components/header/register/index.jsx","components/tasks/time/index.jsx","components/tasks/item/index.jsx","components/tasks/index.jsx","components/header/index.jsx","components/page/index.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Context","React","createContext","Store","user","authUser","allTask","Reducer","state","action","type","payload","Login","useContext","dispatch","useState","email","password","value","setValue","className","onSubmit","e","preventDefault","filter","word","htmlFor","name","placeholder","onChange","target","Register","hr","register","setRegister","id","Math","floor","random","tasks","answer","checked","Time","props","time","padNumber","String","h","m","s","c","round","Item","startTime","timeOut","description","visible","setVisible","running","setTime","update","Date","onClick","cols","rows","placeholde","clearTimeout","tick","setTimeout","Tasks","map","index","key","Header","active","setActive","Page","store","difficult","task","setTask","add","setAdd","to","App","useReducer","Provider","exact","path","render","from","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9b5f2b03.chunk.js","sourcesContent":["import React from 'react';\r\nexport const Context = React.createContext();","export const Store ={\r\n    user:[],\r\n    authUser:[],\r\n    allTask:[],\r\n   \r\n};","export const Reducer =(state,action)=>{\r\n            switch(action.type){\r\n                case 'REGISTER':\r\n                    return{\r\n                        ...state,\r\n                        ...action.payload\r\n                    };\r\n                case 'AUTH':\r\n                    return{\r\n                        ...state,\r\n                        ...action.payload\r\n                    }\r\n                    case 'ADD':\r\n                        return{\r\n                            ...state,\r\n                            ...action.payload\r\n                        }\r\n                    case 'LOG_OUT':\r\n                        return{\r\n                            ...state,\r\n                            ...action.payload\r\n                        }\r\n                    case 'ANSWER':\r\n                        return{\r\n                            ...state,\r\n                            ...action.payload\r\n                        }\r\n                default:\r\n                    return state;\r\n            }\r\n};","\r\nimport React,{useContext,useState} from 'react';\r\nimport {Context} from '../../../store/context';\r\n\r\nconst Login =() =>{\r\n    const{state,dispatch} = useContext(Context);\r\n    const[value,setValue]=useState({\r\n        email:'',\r\n        password:''\r\n    });\r\n \r\n    const handleLoginSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if(((state.user.filter(word=>word.email == value.email))&&(state.user.filter(word=>word.password ==value.password)))&&((value.email !== '')||(value.password !== ''))){\r\n            setValue({\r\n                email:'',\r\n                password:'',\r\n               \r\n            })\r\n            dispatch({\r\n                type:'AUTH',\r\n                payload:{\r\n                    authUser:[...state.user.filter(word=>word.email == value.email)]\r\n                }\r\n            });\r\n        }\r\n            \r\n            \r\n        \r\n        \r\n\r\n    }\r\n    return(\r\n        <div className='form'>\r\n            <form \r\n            onSubmit={handleLoginSubmit} \r\n            className='form-control'>\r\n                <div className='input-control'>\r\n                    <label htmlFor=\"emil\">E-mail</label>\r\n                    <input \r\n                    type=\"text\" \r\n                    name='email' \r\n                    placeholder='Enter your E-mail'\r\n                    value={value.email}\r\n                    onChange={(e)=>setValue({\r\n                        email:e.target.value,\r\n                        password:value.password\r\n                    })}\r\n\r\n                    />\r\n                </div>\r\n                <div className='input-control'>\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input \r\n                    type=\"text\" \r\n                    name='password' \r\n                    placeholder='Enter your Password'\r\n                    value={value.password}\r\n                    onChange={(e)=>setValue({\r\n                        email:value.email,\r\n                        password:e.target.value\r\n                    })}\r\n                    />\r\n                </div>\r\n                <div className='btn'>\r\n                <button type='submit'>Login</button>\r\n                </div>\r\n            </form>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Login;","import React,{useState,useContext} from 'react';\r\nimport {Context} from '../../../store/context'\r\n\r\n\r\nconst Register =()=>{\r\n    const{state,dispatch} = useContext(Context);\r\n\r\n      const[register,setRegister]=useState({\r\n          name:'',\r\n          email:'',\r\n          password:'',\r\n          user:false,\r\n          hr:false,\r\n          \r\n\r\n      });\r\n      \r\n      const handleSubmit=(e)=>{\r\n            e.preventDefault();\r\n            dispatch({\r\n                type:'REGISTER',\r\n                payload:{\r\n                    \r\n                    user:[{...register,id:'user'+Math.floor(Math.random()*100000),\r\n                        tasks:[],answer:[]},...state.user]\r\n                    \r\n                    \r\n                   \r\n                }\r\n            })\r\n      }\r\n    return(\r\n    <div className='form'>\r\n        <form onSubmit={handleSubmit} className='form-control'>\r\n            <div className='input-control'>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input \r\n                type=\"text\" \r\n                name='name' \r\n                placeholder='Enter your name'\r\n                value={register.name}\r\n                onChange={(e)=>setRegister({\r\n                    name:e.target.value,\r\n                    email:register.email,\r\n                    password:register.password,\r\n                    user:false,\r\n                    hr:false\r\n                })}\r\n                />\r\n            </div>\r\n            <div className='input-control'>\r\n                <label htmlFor=\"emil\">E-mail</label>\r\n                <input \r\n                type=\"text\" \r\n                name='email' \r\n                placeholder='Enter your E-mail'\r\n                value={register.email}\r\n                onChange={(e)=>setRegister({\r\n                    name:register.name,\r\n                    email:e.target.value,\r\n                    password:register.password,\r\n                    user:false,\r\n                    hr:false\r\n                })}\r\n                />\r\n            </div>\r\n            <div className='input-control'>\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input \r\n                type=\"text\" \r\n                name='password' \r\n                placeholder='Enter your Password'\r\n                value={register.password}\r\n                onChange={(e)=>setRegister({\r\n                    name:register.name,\r\n                    email:register.email,\r\n                    password:e.target.value,\r\n                    user:false,\r\n                    hr:false\r\n                })}\r\n                />\r\n            </div>\r\n            <div className='input-control'>\r\n                <label htmlFor=\"hr\">HR</label>\r\n                <input \r\n                type=\"checkbox\"\r\n                name='hr'\r\n                checked={register.hr}\r\n                onChange={()=>setRegister({\r\n                    name:register.name,\r\n                    email:register.email,\r\n                    password:register.password,\r\n                    user:false,\r\n                    hr:!register.hr\r\n                })}\r\n                />\r\n            </div>\r\n            <div className='input-control'>\r\n                <label htmlFor=\"user\">User</label>\r\n                <input \r\n                type=\"checkbox\" \r\n                name='user'\r\n                checked={register.user}\r\n                onChange={()=>setRegister({\r\n                    name:register.name,\r\n                    email:register.email,\r\n                    password:register.password,\r\n                    user:!register.user,\r\n                    hr:false\r\n                })}\r\n                />\r\n            </div>\r\n            <div className='btn'>\r\n                <button type='submit'>REGISTER</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Register;","import React from 'react'\r\n\r\nconst Time=(props)=>{\r\nconst{time} = props;\r\n    const padNumber =(value)=>{\r\n        return value > 9 ? String(value) : \"0\" + value;\r\n    }\r\n    const h = padNumber(Math.floor(time / 3600000));\r\n    const m = padNumber(Math.floor(time / 60000) % 60);\r\n    const s = padNumber(Math.floor(time / 1000) % 60);\r\n    const c = padNumber(Math.round(time / 10) % 100);\r\n    return(\r\n        <div className='time'>\r\n            {h}:{m}:{s}.<small>{c}</small>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Time;","import React,{useState,useEffect} from 'react';\r\nimport Time from '../time/index';\r\n\r\nconst Item =(props)=>{\r\n    const{state,dispatch}=props;\r\n    const{name,description,id} = props;\r\n    const[visible,setVisible] = useState(false);\r\n    const handleAddTask=()=>{\r\n            dispatch({\r\n                type:'ANSWER',\r\n                payload:{\r\n                    answer:[{}]\r\n                }\r\n            })\r\n    }\r\n    const[time,setTime]= useState({\r\n        time:0,\r\n        running:false\r\n    });\r\n    let startTime;\r\n    let timeOut;\r\n\r\n    const update=(running)=>{\r\n        setTime({\r\n            time:+new Date() - startTime,\r\n            \r\n        })\r\n    };\r\n    const tick=()=>{\r\n        update(true);\r\n         timeOut = setTimeout(tick());\r\n    }\r\n    const toggle=(e)=>{\r\n        e.preventDefault();\r\n        if(!time.running){\r\n            startTime = +new Date();\r\n            tick();\r\n        }else{\r\n            update(false);\r\n            clearTimeout(timeOut);\r\n        }\r\n    }\r\n    return(\r\n        <ul className='task-item'>\r\n            <li className='item' onClick={()=>setVisible(!visible)}>{name}</li>\r\n            { visible &&\r\n                <ul>\r\n                    <li>{description}</li>\r\n                    <form>\r\n                        <div className='answer'>\r\n                            <textarea \r\n                            name=\"\" \r\n                            id=\"\" \r\n                            cols=\"30\" \r\n                            rows=\"10\"\r\n                            placeholde='Write answer'\r\n                            >\r\n\r\n                            </textarea>\r\n                        </div>\r\n                        <Time time={time.time} />\r\n                        <div className='btn'>\r\n                            <button onClick={toggle}>\r\n                                Начать решать\r\n                            </button>\r\n                        </div>\r\n                        <div className='btn'>\r\n                            <button onClick={handleAddTask}>Отправить результат</button>\r\n                        </div>\r\n                    </form>\r\n                </ul>\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\nexport default Item;","import React,{useContext,useState} from 'react';\r\nimport {Context} from '../../store/context';\r\nimport Item from './item/index';\r\nconst Tasks =()=>{\r\n    const{state,dispatch} = useContext(Context);\r\n    \r\n    return(\r\n        <div className='task'>\r\n            {state.allTask.map((e,index)=><Item state={state.authUser} dispatch={dispatch} key={index} \r\n            name={e.name} \r\n            description={e.description} \r\n            id={e.id} />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tasks;","import React,{useState} from 'react';\r\nimport './index.scss';\r\nimport Login from './auth/index';\r\nimport Register from './register/index';\r\nimport Task from '../tasks/index';\r\nconst Header =()=>{\r\n  const[active,setActive]=useState(false);\r\n    return(\r\n        <header className='header'>\r\n        <div className='btn'>\r\n          <button onClick={()=>setActive(!active)} >Login </button>\r\n          <button onClick={()=>setActive(!active)}>Register </button>\r\n        </div>\r\n        { !active ? <Login /> : <Register /> }\r\n       \r\n       \r\n      </header>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Header;","import React,{useContext,useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './index.scss';\r\nimport {Context} from '../../store/context';\r\nimport Task from '../tasks/index';\r\nconst Page =(props)=>{\r\n    const{store} = props;\r\n    const{state,dispatch} = useContext(Context);\r\n    const[task,setTask] = useState({\r\n        name:'',\r\n        description:'',\r\n        id:store.map((e)=>e.id),\r\n        user:store.map((e)=>e.user),\r\n        hr:store.map((e)=>e.hr),\r\n        difficult:''\r\n\r\n    });\r\n    const[add,setAdd]= useState(false);\r\n    \r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        dispatch({\r\n            type:'ADD',\r\n            payload:{\r\n                allTask:[{...task},...state.allTask],\r\n\r\n            }\r\n        })\r\n    \r\n    }\r\n    return(\r\n        <div className='auth'>\r\n            <div className='info'>\r\n                <div className='name'>\r\n                    <h1>{state.authUser.map((e)=>e.name)}</h1>\r\n                </div>\r\n                <div className='email'>\r\n                    <p>{state.authUser.map((e)=>e.email)}</p>\r\n                </div>\r\n                <div className='status'>\r\n                    {state.authUser.map((e)=>e.user) == true ? <p>User</p> : <p>HR</p>}\r\n                </div>\r\n                <div className='logout'>\r\n                <button onClick={()=>{\r\n                dispatch({\r\n                    type:'LOG_OUT',\r\n                    payload:{\r\n                        authUser:[],\r\n                        \r\n                    }\r\n                })\r\n            }}>LogOut</button>\r\n                </div>\r\n                <div className='mainpage'>\r\n                    <Link to='/'>На главную</Link>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className='task-container'>\r\n                <div className='btn'>\r\n                    <button onClick={()=>setAdd(!add)}>+</button>\r\n                </div>\r\n                { add &&\r\n                <form onSubmit={handleSubmit} >\r\n                    <div className='add-task'>\r\n                        <div className=\"input-task\">\r\n                            <input \r\n                            type=\"text\" \r\n                            placeholde='Write taskName'\r\n                            value={task.name}\r\n                            placeholder='Write new task'\r\n                            onChange={(e)=>setTask({\r\n                                name:e.target.value,\r\n                                description:task.description,\r\n                                id:state.authUser.map((e)=>e.id),\r\n                                user:state.authUser.map((e)=>e.user),\r\n                                hr:state.authUser.map((e)=>e.hr),\r\n                                difficult:task.difficult\r\n                            })}\r\n                            />\r\n                        </div>\r\n                        <div className='description'>\r\n                            <textarea \r\n                            className='Write the description'\r\n                            value={task.description}\r\n                            placeholder='Write new description'\r\n                            onChange={(e)=>setTask({\r\n                                name:task.name,\r\n                                description:e.target.value,\r\n                                id:state.authUser.map((e)=>e.id),\r\n                                user:state.authUser.map((e)=>e.user),\r\n                                hr:state.authUser.map((e)=>e.hr),\r\n                                difficult:task.difficult\r\n                            })}\r\n                            >\r\n\r\n                            </textarea>\r\n                        </div>\r\n                        <div className='difficult'>\r\n                            <input \r\n                            type=\"text\" \r\n                            placeholder='Write difficult'\r\n                            value={task.difficult}\r\n                            onChange={(e)=>setTask({\r\n                                name:task.name,\r\n                                description:task.description,\r\n                                id:state.authUser.map((e)=>e.id),\r\n                                user:state.authUser.map((e)=>e.user),\r\n                                hr:state.authUser.map((e)=>e.hr),\r\n                                difficult:e.target.value\r\n                            })}\r\n                            />\r\n                        </div>\r\n                        <div className='btn'>\r\n                            <button type='submit'>Add</button>\r\n                        </div>\r\n                    </div>\r\n                    </form>\r\n                }\r\n            <Task />\r\n           </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Page;","import React,{useReducer,useEffect} from 'react';\nimport './app.scss';\nimport{Route,Switch,Redirect,BrowserRouter} from 'react-router-dom';\nimport {Context} from './store/context';\nimport {Store } from './store/store';\nimport {Reducer} from './store/reducer';\nimport Header from './components/header/index';\nimport Page from './components/page/index';\n\nconst App =()=>{\n  const[state,dispatch] = useReducer(Reducer,Store);\n\n \n  return(\n    <Context.Provider value={{dispatch,state}}>\n         \n         \n\n        \n          <BrowserRouter>\n          \n          <Route exact path=\"/\" render={()=><Header />} />\n          { state.authUser.map((e)=>e.id ) != '' &&\n          <Switch>\n          <Route path={`/${state.authUser.map((e)=>e.id)}`} render={()=><Page store={state.authUser} />}/>\n          <Redirect from='/' to={`/${state.authUser.map((e)=>e.id)}`} />\n          </Switch>\n          }\n          </BrowserRouter>\n      \n          \n  \n    \n    </Context.Provider>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  \n       <App />  \n    ,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}